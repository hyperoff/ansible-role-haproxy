global
    # global settings here
    maxconn 50000
    log {{ haproxy_log_socket }} local0 {{ haproxy_log_level }}
    user {{ haproxy_user }}
    group {{ haproxy_group }}
    daemon
    stats socket {{ haproxy_socket }} user {{ haproxy_user }} group {{ haproxy_group }} mode 660 level admin expose-fd listeners
    {% if haproxy_version is version('2.6', 'lt') %}
    nbproc {{ haproxy_nbproc }}
    {% endif %}
    nbthread {{ haproxy_nbthread }}
    cpu-map {{ haproxy_cpumap }}

    # Default SSL material locations
    ca-base {{ haproxy_ssl_certificate_dir }}
    crt-base {{ haproxy_ssl_certificate_dir }}

    # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
    ssl-dh-param-file {{ haproxy_ssl_dhparam_file }}

defaults
    # defaults here
    retries 3
    timeout http-request 10s
    timeout queue 1m
    timeout connect 10s
    timeout client 30s
    timeout server 30s
    log global
    mode http
    option httplog

listen stats
    bind  0.0.0.0:22002
    mode  http
    stats enable
    stats uri /stats
    stats refresh 5000

listen admin
    bind 0.0.0.0:22001
    mode  http
    stats enable
    stats uri /admin
    stats refresh 5000
    stats auth {{ haproxy_stats_admin_user }}:{{ haproxy_stats_admin_user_password }}
    stats admin if TRUE

frontend haproxy_http
    mode http
    bind {{ haproxy_frontend_ip }}:80
    # CORS
    http-response set-header Access-Control-Allow-Origin "*"
    http-response set-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept"
    http-response set-header Access-Control-Allow-Methods "GET, OPTIONS, POST, PUT"
    http-response del-header server
    http-response del-header vary
    http-response del-header location

    default_backend be

frontend haproxy_https
    # a frontend that accepts requests from clients
    bind {{ haproxy_frontend_ip }}:443 ssl crt {{ haproxy_ssl_certificate_chain_file }} alpn h2,http1.1

    # CORS
    http-response set-header Access-Control-Allow-Origin "*"
    http-response set-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept"
    http-response set-header Access-Control-Allow-Methods "GET, OPTIONS, POST, PUT"
    http-response del-header server
    http-response del-header vary
    http-response del-header location

    default_backend be

backend be
    # servers that fulfill the requests
    balance leastconn
    option httpchk
    http-check send meth HEAD uri /api/health
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    default-server check maxconn 20
    {% for backend in haproxy_backends %}
    server {{ backend.backend_name }} {{ backend.backend_ip }}:{{ backend.backend_port | default(80, true) }} check
    {% endfor %}
